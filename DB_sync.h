#ifndef DB_SYNC_H
#define DB_SYNC_H

/*
	Dependency:
		1. DB_oprator.h
		2. DB_change.h
	Todo:
		1. 定义一个数据结构，用来表示异构数据库的对应关系
			1. 两个表的表头
			2. 用来查询的关键字段
			3. 更新字段
		2. 初始化函数
			1. 实例化第1点中的数据结构，两个数据库可能有多个对应关系，因此使用 vector 存比较好。
			2. (optional) 确认表结构，表间关系确认后，需检查
				1. 目标端是否有关键字段和更新字段，如果没有，使用 alter table 命令增加字段
				2. 目标段和源端所对应的字段类型是否一致（数据类型、最大长度）。 如果不一致，修改目标端字段类型
			3. (optional) 执行第一次同步，将源端已有的内容迁移过来
		2. 根据数据库变动和两个数据库的对应关系，解析出目标端数据库需要修改的内容，用 DB_change 结构表示
			1. 当源端数据库有变动时，根据“用来查询的关键字” 去匹配目标端的内容
			2. 根据源端的操作类型，分别做 insert，delete，update操作
		3. 调用 DB operator，将第三步的解析结果传入
	Test:
		1. 
*/

#endif